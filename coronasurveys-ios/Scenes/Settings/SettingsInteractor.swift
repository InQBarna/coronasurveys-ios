//
//  SettingsInteractor.swift
//  coronasurveys-ios
//
//  Created by Josep Bordes Jov√© on 18/05/2020.
//  Copyright (c) 2020 Inqbarna. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SettingsBusinessLogic {
    func prepareView(request: Settings.PrepareView.Request)
    func toggleNotification(request: Settings.ToggleNotification.Request)
}

protocol SettingsDataStore: DependencyInjectable {
    // var name: String { get set }
}

class SettingsInteractor: SettingsBusinessLogic, SettingsDataStore {
    var presenter: SettingsPresentationLogic?

    // MARK: Data store

    var context: [Dependency: Any?]?

    // MARK: Workers

    let workers = PreferencesWorker(store: PreferencesStore())

    // MARK: Business logic

    func prepareView(request: Settings.PrepareView.Request) {
        workers.hasScheduledNotification { [weak self] hasScheduledNotification in
            let response = Settings.PrepareView.Response(hasScheduledNotification: hasScheduledNotification)
            self?.presenter?.presentView(response: response)
        }
    }

    func toggleNotification(request: Settings.ToggleNotification.Request) {
        if request.newValue == true {
            workers.scheduleNotification(for: .daily)
        } else {
            workers.cancelNotification()
        }

        workers.hasScheduledNotification { [weak self] hasScheduledNotification in
            let response = Settings.ToggleNotification.Response(hasScheduledNotification: hasScheduledNotification)
            self?.presenter?.presentToggleNotification(response: response)
        }
    }
}
