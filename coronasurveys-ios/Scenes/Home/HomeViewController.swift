//
//  HomeViewController.swift
//  coronasurveys-ios
//
//  Created by Josep Bordes Jov√© on 18/05/2020.
//  Copyright (c) 2020 Inqbarna. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import SKCountryPicker
import UIKit

protocol HomeDisplayLogic: AnyObject {
    func displayView(viewModel: Home.PrepareView.ViewModel)
    func displayCountryCode(viewModel: Home.UpdateCountryCode.ViewModel)
}

class HomeViewController: UIViewController, HomeDisplayLogic, AutoUpdateContext {
    var interactor: HomeBusinessLogic?
    var router: (NSObjectProtocol & HomeRoutingLogic & HomeDataPassing)?

    // MARK: View

    private lazy var homeView: HomeView = {
        let view = HomeView()
        view.delegate = self
        return view
    }()

    // MARK: AutoUpdateContext

    var childrenViewControllers: [UIViewController]? {
        nil
    }

    var context: [Dependency: Any?]? {
        get {
            router?.dataStore?.context
        }
        set {
            var dataStore = router!.dataStore!
            dataStore.context = newValue
        }
    }

    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup

    private func setup() {
        let viewController = self
        let interactor = HomeInteractor()
        let presenter = HomePresenter()
        let router = HomeRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: View lifecycle

    override func loadView() {
        super.loadView()
        view = homeView
    }

    override func viewDidLoad() {
        super.viewDidLoad()

        setupNavigationController()
        prepareView()
    }

    // MARK: Setup methods

    private func setupNavigationController() {
        let settingsButton = UIBarButtonItem(image: Icon.settings, style: .plain, target: self, action: #selector(settingsTapped))
        navigationItem.rightBarButtonItem = settingsButton
    }

    // MARK: Prepare view

    func prepareView() {
        let request = Home.PrepareView.Request()
        interactor?.prepareView(request: request)
    }

    func displayView(viewModel: Home.PrepareView.ViewModel) {
        title = viewModel.title

        let homeViewVM = HomeViewVM(sections: viewModel.sections, deviceLocale: viewModel.countryCode)
        homeView.display(viewModel: homeViewVM)
    }

    // MARK: UpdateCountryCode

    func updateCountryCode(with code: String) {
        let request = Home.UpdateCountryCode.Request(newCountryCode: code)
        interactor?.updateCountryCode(request: request)
    }

    func displayCountryCode(viewModel: Home.UpdateCountryCode.ViewModel) {
        let homeViewVM = HomeViewVM(sections: viewModel.sections, deviceLocale: viewModel.countryCode)
        homeView.display(viewModel: homeViewVM)
    }

    // MARK: Helpers

    @objc private func settingsTapped() {
        router?.routeToSettings()
    }
}

// MARK: HomeViewDelegate

extension HomeViewController: HomeViewDelegate {
    func didTapCountry() {
        let countryController = CountryPickerWithSectionViewController.presentController(on: self) { [weak self] country in
            self?.updateCountryCode(with: country.countryCode)
        }

        countryController.navigationController?.navigationBar.tintColor = Color.black
    }

    func didTapFacebook() {
        if let url = URL(string: Configuration.facebookUrl) {
            UIApplication.shared.open(url)
        }
    }

    func didTapTwitter() {
        if let url = URL(string: Configuration.twitterUrl) {
            UIApplication.shared.open(url)
        }
    }

    func didTapInstagram() {
        if let url = URL(string: Configuration.instagramUrl) {
            UIApplication.shared.open(url)
        }
    }

    func didTapSeeTeamButton() {
        if let url = URL(string: Configuration.teamUrl) {
            UIApplication.shared.open(url)
        }
    }

    func didTapSeeDataButton() {
        if let url = URL(string: Configuration.dataUrl) {
            UIApplication.shared.open(url)
        }
    }

    func didTapSendEmail(_ sender: UIButton) {
        let apps = MailApps.allAvailable(recipient: Configuration.email, subject: L10N.sendMailSubject, body: nil)
        let mailLinker = MailLinker(availableApps: apps, sender: sender)

        DispatchQueue.main.async {
            self.present(mailLinker, animated: true, completion: nil)
        }
    }

    func didSelectConutry(code: String) {
        updateCountryCode(with: code)
    }

    func didTapStartForm() {
        router?.routeToForm()
    }
}
